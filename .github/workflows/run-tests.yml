name: Run tests

on:
  push:

jobs:
  run-tests-on-ubuntu-22-04-x86_64:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: true

      - name: Compile and run C example
        run: bash c-example/build-run.sh

      - name: Upload C example binary to the s3 bucket
        run: |
          sudo apt-get update
          sudo apt-get install -y s3cmd
          cat > ~/.s3cfg <<EOF
          [default]
          access_key = ${{ secrets.S3_ACCESS_KEY }}
          secret_key = ${{ secrets.S3_SECRET_KEY }}
          bucket_location = us-east-1
          host_base = ${{ secrets.S3_ENDPOINT_URL }}
          host_bucket = %(bucket)s.${{ secrets.S3_ENDPOINT_URL }}
          use_https = True
          EOF
          # Upload the C example binary to S3
          s3cmd put c-example/build/c_example s3://oaax/c-example/ubuntu/x86_64/c_example

  run-tests-on-ubuntu-22-04-arm:
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: true

      - name: Compile and run C example
        run: bash c-example/build-run.sh

      - name: Upload C example binary to the s3 bucket
        run: |
          sudo apt-get update
          sudo apt-get install -y s3cmd
          cat > ~/.s3cfg <<EOF
          [default]
          access_key = ${{ secrets.S3_ACCESS_KEY }}
          secret_key = ${{ secrets.S3_SECRET_KEY }}
          bucket_location = us-east-1
          host_base = ${{ secrets.S3_ENDPOINT_URL }}
          host_bucket = %(bucket)s.${{ secrets.S3_ENDPOINT_URL }}
          use_https = True
          EOF
          # Upload the C example binary to S3
          s3cmd put c-example/build/c_example s3://oaax/c-example/ubuntu/aarch64/c_example

  run-tests-on-windows-x86_64:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: true

      - name: Compile and run C example
        shell: powershell
        run: |
          cd c-example
          .\build-run.bat

      - name: Upload C example binary to s3 bucket
        shell: pwsh
        run: |
          # Install s5cmd for Windows
          $s5cmdUrl = "https://github.com/peak/s5cmd/releases/download/v2.3.0/s5cmd_2.3.0_Windows-64bit.zip"
          $s5cmdZip = "$env:USERPROFILE\s5cmd.zip"
          $s5cmdPath = "$env:USERPROFILE\s5cmd"
          Invoke-WebRequest -Uri $s5cmdUrl -OutFile $s5cmdZip
          Expand-Archive -Path $s5cmdZip -DestinationPath $s5cmdPath -Force
          Remove-Item -Path $s5cmdZip

          $env:PATH += ";$s5cmdPath"
          [Environment]::SetEnvironmentVariable("PATH", $env:PATH, [EnvironmentVariableTarget]::User)

          $env:AWS_ACCESS_KEY_ID = "${{ secrets.S3_ACCESS_KEY }}"
          $env:AWS_SECRET_ACCESS_KEY = "${{ secrets.S3_SECRET_KEY }}"
          s5cmd --endpoint-url "https://${{ secrets.S3_ENDPOINT_URL }}" cp ".\c-example\build\c_example.exe" "s3://oaax/c-example/windows/x86_64/c_example.exe"
          s5cmd --endpoint-url "https://${{ secrets.S3_ENDPOINT_URL }}" cp ".\c-example\build\jpeg62.dll" "s3://oaax/c-example/windows/x86_64/jpeg62.dll"
